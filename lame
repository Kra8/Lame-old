#!/bin/sh

#################################################################################
#                                                                               
#   lame
#   Laravel + Homestead の環境を簡単に整えることを目的とするスクリプト                  
#
#   @version    1.1.0
#   @update     2016/06/29
#   @develop    K.Asai (asai@teaapplications.com)
#
#################################################################################

readonly COLOR_RED="\033[31m"
readonly COLOR_GREEN="\033[32m"
readonly COLOR_YELLOW="\033[33m"
readonly COLOR_BLUE="\033[34m"
readonly COLOR_OFF="\033[m"
readonly CURRENT=`pwd`

readonly CMDNAME=$(basename $0)
readonly VERSION="1.1.0"


############################# Functions #############################
function error() { echo "$@" 1>&2; }
function abort() { error "$@"; exit 1; }

# コマンドが存在するかどうか
function commandIsExists(){
    if type $1 2>/dev/null 1>/dev/null; 
    then
        echo true
    else
        echo false
    fi
} 

# ユーザに yes/no の入力を促す
function askYesOrNo() {
    while true ; do
        read -p "$1 (y/n)?" answer
        case $answer in
            [yY] | [yY]es | YES )
                return 0;;
            [nN] | [nN]o | NO )
                return 1;;
            * ) echo "Please answer yes or no.";;
        esac
    done
}

function opt_help() {
    echo "Lame : ${VERSION}"
    echo 
    echo "Usage:"
    echo "${CMDNAME} <project_name>"
    echo "${CMDNAME} [options]"
    echo
    echo "Options:"
    echo "  -h, --help              Display this help message"
    echo "  -v, --version           Display this application version"
    echo "      --update            Update to latest version"           
    echo
    echo "See:"
    echo "https://github.com/Kra8/lame"
    echo
}

function opt_update() {
    curl -fsSL https://raw.githubusercontent.com/Kra8/lame/master/installer.sh | sh
}

function new_project() {
    project_name="$1"
    
    echo "${project_name} project crafting ..."

    # already project file exist check
    if [ -e "${CURRENT}/${project_name}" ]; then
        abort "${COLOR_RED}Application already exists!${COLOR_OFF}"
    fi

    #==================================================================#
    ## homebrewが存在するか 
    if [ `commandIsExists brew` = true ]; then
        echo "brew is exists ... ${COLOR_GREEN}true${COLOR_OFF}" 
    else
        # 存在しない場合、インストールを促す
        echo "homebrew is exists ... ${COLOR_YELLOW}false${COLOR_OFF}"
        askYesOrNo "Homebrew をインストールします"
        if [ $? -eq 0 ]
        then
            # brew のインストール
            /usr/bin/ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
            # brew cask のインストール
            brew install caskroom/cask/brew-cask
        else
            exit 0
        fi
    fi
    
    #==================================================================#

    ## virtualboxが存在するか。
    if [ `commandIsExists virtualbox` = true ]
    then
        echo "virtualbox is exists ... ${COLOR_GREEN}true${COLOR_OFF}" 
    else
        # 存在しない場合インストールする
        echo "virtualbox is exists ... ${COLOR_YELLOW}false${COLOR_OFF}"
        echo "VirtualBox install ..."
        # virtualboxのインストール
        brew cask install virtualbox
    fi

    ## vagrantが存在するか。
    if [ `commandIsExists vagrant` = true ]
    then
        echo "vagrant is exists ... ${COLOR_GREEN}true${COLOR_OFF}" 
    else
        echo "vagrant is exists ... ${COLOR_RED}false${COLOR_OFF}"
        echo "Vagrant install ..."
        # vagrantのインストール
        brew cask install vagrant
    fi

    #==================================================================#

    ## composerが存在するか。
    if [ `commandIsExists composer` = true ]
    then
        echo "composer is exists ... ${COLOR_GREEN}true${COLOR_OFF}" 
    else
        echo "composer is exists ... ${COLOR_RED}false${COLOR_OFF}"
        echo "Composer install ..."
        # composer のインストールに必要なphp56をインストール
        brew install php56
        # composer のインストール
        brew install homebrew/php/composer
    fi

    #==================================================================#

    ## laravelが存在するか。
    commandPath="$HOME/.composer/vendor/bin/laravel"
    if [ -e ${commandPath} ]
    then
        echo "laravel is exists ... ${COLOR_GREEN}true${COLOR_OFF}" 
    else
        echo "laravel is exists ... ${COLOR_RED}false${COLOR_OFF}"
        echo "Laravel install ..."
        # laravelのインストール
        composer global require "laravel/installer=~1.1"
    fi


    ## プロジェクトファイルの作成
    $commandPath new $project_name

    ## boxの有無を確認する
    box_exists=`vagrant box list | grep -c 'homestead'`
    if [ ${box_exists} -gt 0 ]
    then
        echo "homestead box is exists ... ${COLOR_GREEN}true${COLOR_OFF}" 
    else
        echo "homestead box is exists ... ${COLOR_YELLOW}false${COLOR_OFF}"
        # boxのダウンロード
        vagrant box add laravel/homestead
    fi


    ## プロジェクトへHomesteadをインストール
    workPath="${CURRENT}/${project_name}"
    cd $workPath
    composer require laravel/homestead --dev


    ## Vagrantfileの作成
    php vendor/bin/homestead make


    ## Homestead.yamlファイルの編集
    sed -i -e '/ip: "192.168.10.10"/s/ip: "192.168.10.10"/ip: "10.0.0.33"/' Homestead.yaml
    sed -i -e "/- map: homestead.app/s/- map: homestead.app/- map: ${project_name}/" Homestead.yaml
    sed -i -e "/- homestead/s/- homestead/- ${project_name}/" Homestead.yaml


    ## etc/hostsファイルを編集
    add_texts="10.0.0.33 ${project_name} # writed by lame(Lravel + Homestead)"
    hosts_exists=`cat /etc/hosts | grep -c "$add_texts"`
    if [ ${hosts_exists} -lt 1 ]
    then
        echo "writing /etc/hosts"
        sudo sh -c "echo '${add_texts}' >> /etc/hosts"
    fi


    ## Homesteadを立ち上げる
    vagrant up


    ## ローカルで開く
    open http://${project_name}
}

############################# 以下実行スクリプト #############################

## 引数なしの場合
if [ -z $1 ]; then
    opt_help
    exit 1
fi

## options解析
for OPT in "$@"
do
    case "$OPT" in
        '-h'|'--help' )
            opt_help
            exit 0
            ;;
        '-v'|'--version' )
            echo Lame : ${VERSION}
            echo
            exit 0
            ;;
        '--update' )
            opt_update
            echo Lame : ${VERSION}
            echo
            exit 0
            ;;
        -*)
            abort "${CMDNAME}: not found option '$(echo $1 | sed 's/^-*//')'"
            ;;
        *)
            # 引数のみ
            new_project $1
            ;;
    esac
done

exit 0


